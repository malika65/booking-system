# Generated by Django 3.2.9 on 2022-04-02 10:41

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('booking_system', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Characteristics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('capacity', models.IntegerField(default=1, verbose_name='Вместимость')),
            ],
            options={
                'verbose_name_plural': '8. Характеристики',
            },
        ),
        migrations.CreateModel(
            name='FacilitiesAndServicesHotels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_category_name', models.CharField(max_length=50, verbose_name='Наименование услуги и удобств отеля')),
            ],
            options={
                'verbose_name_plural': '6. Удобства и услуги отелей',
            },
        ),
        migrations.CreateModel(
            name='FacilitiesAndServicesRooms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_category_name', models.CharField(max_length=50, verbose_name='Наименование услуги и удобств комнаты')),
            ],
            options={
                'verbose_name_plural': '9. Удобства и услуги комнат',
            },
        ),
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foodcategory_name', models.CharField(max_length=50, verbose_name='Категория питания')),
                ('foodcategory_abbreviation', models.CharField(default=None, max_length=2, verbose_name='Аббревиатура питания')),
            ],
            options={
                'verbose_name_plural': '5. Категории питания',
            },
        ),
        migrations.CreateModel(
            name='HotelCategoryStars',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotelcategory_name', models.CharField(max_length=50, verbose_name='Категория звезд отеля')),
                ('hotelcategory_stars', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)], verbose_name='Звезды')),
            ],
            options={
                'verbose_name_plural': '4. Категории отелей(звезды)',
            },
        ),
        migrations.AlterModelOptions(
            name='booking',
            options={'verbose_name_plural': '1. Бронирования'},
        ),
        migrations.AlterModelOptions(
            name='country',
            options={'verbose_name_plural': '3. Страны и города'},
        ),
        migrations.AlterModelOptions(
            name='hotel',
            options={'verbose_name_plural': '2. Отели'},
        ),
        migrations.AlterModelOptions(
            name='room',
            options={'verbose_name_plural': '7. Типы Номеров'},
        ),
        migrations.RemoveField(
            model_name='hotel',
            name='city_id',
        ),
        migrations.RemoveField(
            model_name='room',
            name='hotel_id',
        ),
        migrations.RemoveField(
            model_name='room',
            name='is_booked',
        ),
        migrations.RemoveField(
            model_name='room',
            name='room_type_id',
        ),
        migrations.AddField(
            model_name='booking',
            name='is_checkout',
            field=models.BooleanField(default=False, verbose_name='Проверено'),
        ),
        migrations.AddField(
            model_name='hotel',
            name='city',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='country', chained_model_field='country_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='booking_system.city', verbose_name='Город'),
        ),
        migrations.AddField(
            model_name='hotel',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='booking_system.country', verbose_name='Страна'),
        ),
        migrations.AddField(
            model_name='hotel',
            name='room_id',
            field=models.ManyToManyField(blank=True, to='booking_system.Room', verbose_name='Типы комнат'),
        ),
        migrations.AlterField(
            model_name='booking',
            name='guest_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ID гостя'),
        ),
        migrations.AlterField(
            model_name='booking',
            name='hotel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking_system.hotel', verbose_name='Отель'),
        ),
        migrations.AlterField(
            model_name='booking',
            name='num_of_guest',
            field=models.IntegerField(default=1, verbose_name='Кол-во гостей'),
        ),
        migrations.AlterField(
            model_name='booking',
            name='room',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='hotel', chained_model_field='hotel_id', on_delete=django.db.models.deletion.CASCADE, to='booking_system.room', verbose_name='Комната'),
        ),
        migrations.AlterField(
            model_name='city',
            name='city_name',
            field=models.CharField(max_length=50, verbose_name='Города'),
        ),
        migrations.AlterField(
            model_name='city',
            name='country_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='booking_system.country', verbose_name='Страна'),
        ),
        migrations.AlterField(
            model_name='city',
            name='postal_code',
            field=models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Почтовый код'),
        ),
        migrations.AlterField(
            model_name='country',
            name='contry_name',
            field=models.CharField(max_length=50, verbose_name='Страны'),
        ),
        migrations.RemoveField(
            model_name='hotel',
            name='category_id',
        ),
        migrations.AlterField(
            model_name='hotel',
            name='hotel_address',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Адрес отеля'),
        ),
        migrations.AlterField(
            model_name='hotel',
            name='hotel_description',
            field=models.TextField(blank=True, max_length=1500, null=True, verbose_name='Описание отеля'),
        ),
        migrations.AlterField(
            model_name='hotel',
            name='hotel_name',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='Название отеля'),
        ),
        migrations.AlterField(
            model_name='hotel',
            name='hotel_phone',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='Номер телефона отеля'),
        ),
        migrations.AlterField(
            model_name='hotel',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Активный'),
        ),
        migrations.AlterField(
            model_name='room',
            name='price',
            field=models.FloatField(blank=True, default=1000.0, null=True, verbose_name='Цена'),
        ),
        migrations.AlterField(
            model_name='room',
            name='room_description',
            field=models.TextField(blank=True, max_length=1500, null=True, verbose_name='Описание комнаты'),
        ),
        migrations.AlterField(
            model_name='room',
            name='room_name',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Название комнаты'),
        ),
        migrations.AlterField(
            model_name='room',
            name='room_no',
            field=models.IntegerField(blank=True, default=101, null=True, verbose_name='Номер комнаты'),
        ),
        migrations.DeleteModel(
            name='Category',
        ),
        migrations.DeleteModel(
            name='RoomType',
        ),
        migrations.AddField(
            model_name='hotel',
            name='food_category',
            field=models.ManyToManyField(blank=True, to='booking_system.FoodCategory', verbose_name='Категории питания'),
        ),
        migrations.AddField(
            model_name='hotel',
            name='hotel_category',
            field=models.ManyToManyField(blank=True, to='booking_system.HotelCategoryStars', verbose_name='Звезды отеля'),
        ),
        migrations.AddField(
            model_name='room',
            name='category_id',
            field=models.ManyToManyField(blank=True, default='Hotel', to='booking_system.FacilitiesAndServicesRooms', verbose_name='Удобства и услуги комнаты'),
        ),
        migrations.AddField(
            model_name='room',
            name='characteristics_id',
            field=models.ManyToManyField(blank=True, to='booking_system.Characteristics', verbose_name='Комната'),
        ),
        migrations.AddField(
            model_name='hotel',
            name='category_id',
            field=models.ManyToManyField(blank=True, default='Hotel', to='booking_system.FacilitiesAndServicesHotels', verbose_name='Удобства и услуги'),
        ),
    ]
