# Generated by Django 3.2.9 on 2022-04-26 10:29

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Подкатегории')),
                ('name_ru', models.CharField(max_length=100, null=True, verbose_name='Подкатегории')),
                ('name_en', models.CharField(max_length=100, null=True, verbose_name='Подкатегории')),
            ],
            options={
                'verbose_name_plural': 'Подкатегории услуги удобств отелей',
            },
        ),
        migrations.CreateModel(
            name='Characteristics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('name_ru', models.CharField(max_length=50, null=True, verbose_name='Название')),
                ('name_en', models.CharField(max_length=50, null=True, verbose_name='Название')),
                ('capacity', models.IntegerField(default=1, verbose_name='Вместимость')),
            ],
            options={
                'verbose_name_plural': '8. Характеристики',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(max_length=50, verbose_name='Города')),
                ('city_name_ru', models.CharField(max_length=50, null=True, verbose_name='Города')),
                ('city_name_en', models.CharField(max_length=50, null=True, verbose_name='Города')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(max_length=50, verbose_name='Страны')),
                ('country_name_ru', models.CharField(max_length=50, null=True, verbose_name='Страны')),
                ('country_name_en', models.CharField(max_length=50, null=True, verbose_name='Страны')),
            ],
            options={
                'verbose_name_plural': '3. Страны и города',
            },
        ),
        migrations.CreateModel(
            name='FacilitiesAndServicesHotels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_category_name', models.CharField(max_length=50, verbose_name='Наименование услуги и удобств отеля')),
                ('hotel_category_name_ru', models.CharField(max_length=50, null=True, verbose_name='Наименование услуги и удобств отеля')),
                ('hotel_category_name_en', models.CharField(max_length=50, null=True, verbose_name='Наименование услуги и удобств отеля')),
                ('category_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='booking_system.category', verbose_name='Подкатегория')),
            ],
            options={
                'verbose_name_plural': '6. Удобства и услуги отелей',
            },
        ),
        migrations.CreateModel(
            name='FacilitiesAndServicesRooms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_category_name', models.CharField(max_length=50, verbose_name='Наименование услуги и удобств комнаты')),
                ('room_category_name_ru', models.CharField(max_length=50, null=True, verbose_name='Наименование услуги и удобств комнаты')),
                ('room_category_name_en', models.CharField(max_length=50, null=True, verbose_name='Наименование услуги и удобств комнаты')),
            ],
            options={
                'verbose_name_plural': '9. Удобства и услуги комнат',
            },
        ),
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('food_category_name', models.CharField(max_length=50, verbose_name='Категория питания')),
                ('food_category_name_ru', models.CharField(max_length=50, null=True, verbose_name='Категория питания')),
                ('food_category_name_en', models.CharField(max_length=50, null=True, verbose_name='Категория питания')),
            ],
            options={
                'verbose_name_plural': '5. Категории питания',
            },
        ),
        migrations.CreateModel(
            name='HotelCategoryStars',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_category_name', models.CharField(max_length=50, verbose_name='Категория звезд отеля')),
                ('hotel_category_name_ru', models.CharField(max_length=50, null=True, verbose_name='Категория звезд отеля')),
                ('hotel_category_name_en', models.CharField(max_length=50, null=True, verbose_name='Категория звезд отеля')),
                ('hotel_category_stars', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(7), django.core.validators.MinValueValidator(1)], verbose_name='Звезды')),
            ],
            options={
                'verbose_name_plural': '4. Категории отелей(звезды)',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Название комнаты')),
                ('room_name_ru', models.CharField(blank=True, max_length=50, null=True, verbose_name='Название комнаты')),
                ('room_name_en', models.CharField(blank=True, max_length=50, null=True, verbose_name='Название комнаты')),
                ('room_description', models.TextField(blank=True, max_length=1500, null=True, verbose_name='Описание комнаты')),
                ('room_description_ru', models.TextField(blank=True, max_length=1500, null=True, verbose_name='Описание комнаты')),
                ('room_description_en', models.TextField(blank=True, max_length=1500, null=True, verbose_name='Описание комнаты')),
                ('price', models.FloatField(blank=True, default=1000.0, null=True, verbose_name='Цена')),
                ('currency', models.CharField(choices=[('EURO', 'EURO'), ('SOM', 'SOM'), ('TENGE', 'TENGE'), ('DOLLAR', 'DOLLAR')], default='DOLLAR', max_length=10)),
                ('child_capacity', models.IntegerField(default=0, verbose_name='Сколько детей помещается')),
                ('category_id', models.ManyToManyField(blank=True, to='booking_system.FacilitiesAndServicesRooms', verbose_name='Удобства и услуги комнаты')),
                ('characteristics_id', models.ManyToManyField(blank=True, to='booking_system.Characteristics', verbose_name='Характеристики(вместимости)')),
            ],
            options={
                'verbose_name_plural': '7. Типы Номеров',
            },
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Название отеля')),
                ('hotel_name_ru', models.CharField(blank=True, max_length=20, null=True, verbose_name='Название отеля')),
                ('hotel_name_en', models.CharField(blank=True, max_length=20, null=True, verbose_name='Название отеля')),
                ('hotel_address', models.CharField(blank=True, max_length=50, null=True, verbose_name='Адрес отеля')),
                ('hotel_address_ru', models.CharField(blank=True, max_length=50, null=True, verbose_name='Адрес отеля')),
                ('hotel_address_en', models.CharField(blank=True, max_length=50, null=True, verbose_name='Адрес отеля')),
                ('hotel_description', models.TextField(blank=True, max_length=1500, null=True, verbose_name='Описание отеля')),
                ('hotel_description_ru', models.TextField(blank=True, max_length=1500, null=True, verbose_name='Описание отеля')),
                ('hotel_description_en', models.TextField(blank=True, max_length=1500, null=True, verbose_name='Описание отеля')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('checkin_date', models.CharField(max_length=20, null=True, verbose_name='Регистрация заезда с')),
                ('checkout_date', models.CharField(max_length=20, null=True, verbose_name='Регистрация выезда до')),
                ('category_id', models.ManyToManyField(blank=True, default='Hotel', to='booking_system.FacilitiesAndServicesHotels', verbose_name='Удобства и услуги')),
                ('city', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='country', chained_model_field='country_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='booking_system.city', verbose_name='Город')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='booking_system.country', verbose_name='Страна')),
                ('food_category', models.ManyToManyField(blank=True, to='booking_system.FoodCategory', verbose_name='Категории питания')),
                ('hotel_category', models.ManyToManyField(blank=True, to='booking_system.HotelCategoryStars', verbose_name='Звезды отеля')),
                ('room_id', models.ManyToManyField(blank=True, to='booking_system.Room', verbose_name='Типы комнат')),
            ],
            options={
                'verbose_name_plural': '2. Отели',
            },
        ),
        migrations.AddField(
            model_name='city',
            name='country_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='booking_system.country', verbose_name='Страна'),
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checkin_date', models.DateField(default=datetime.datetime.now)),
                ('checkout_date', models.DateField(default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(default=datetime.datetime.now)),
                ('num_of_guest', models.IntegerField(default=1, verbose_name='Кол-во гостей')),
                ('is_checkout', models.BooleanField(default=False, verbose_name='Проверено')),
                ('guest_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ID гостя')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking_system.hotel', verbose_name='Отель')),
                ('room', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='hotel', chained_model_field='hotel_id', on_delete=django.db.models.deletion.CASCADE, to='booking_system.room', verbose_name='Комната')),
            ],
            options={
                'verbose_name_plural': '1. Бронирования',
            },
        ),
    ]
